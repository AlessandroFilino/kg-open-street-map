create or replace view tmp_sequence_to_idx as
select subquery.way_id, subquery.local_id, subquery.idx 
from (select tc.way_id, tc.local_id ,ROW_NUMBER() over(partition by tc.way_id order by tc.local_id)  as idx
from tmp_node_coord0 tc)subquery
order by subquery.local_id;


create or replace view tmp_array_idx1 as
SELECT
	ai.way_id,
	old.local_id as old_idx,
  (SELECT idx FROM tmp_sequence_to_idx WHERE way_id = ai.way_id and local_id = ai.start_idx) AS start_idx,
  (SELECT idx FROM tmp_sequence_to_idx WHERE way_id = ai.way_id and local_id = ai.end_idx) AS end_idx
FROM tmp_array_idx ai
join tmp_sequence_to_idx old on old.way_id = ai.way_id and old.local_id = ai.start_idx
order by start_idx;

create or replace view tmp_linestrings as 
select 'OS' || lpad(ar.way_id::text,11,'0') || 'RE/' || wn.sequence_id as id, ar.start_idx, ar.end_idx, ST_MakeLine(t1.points[ar.start_idx : ar.end_idx + 1]) as linestring
from tmp_way_array t1
left join tmp_array_idx1 ar on t1.way_id = ar.way_id	
join way_nodes_old as wno on ar.way_id = wno.way_id and wno.sequence_id = ar.old_idx
join way_nodes as wn on wn.way_id=wno.way_id and wn.node_id = wno.node_id
order by id;
